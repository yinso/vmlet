// Generated by CoffeeScript 1.4.0
(function() {
  var Compiler, Environment, Func, Parser, Runtime, Task, baseEnv, loglet;

  loglet = require('loglet');

  Environment = require('./environment');

  Compiler = require('./compiler');

  Parser = require('./parser');

  Task = require('./task');

  baseEnv = require('./baseenv');

  Func = require('./function');

  Runtime = (function() {

    Runtime.Func = Func;

    function Runtime(base) {
      this.base = base != null ? base : baseEnv;
      this.compiler = new Compiler();
    }

    Runtime.prototype.define = function(key, val) {
      return this.base.define(key, val);
    };

    Runtime.prototype.parse = function(code) {
      return Parser.parse(code);
    };

    Runtime.prototype.compile = function(code, env) {
      if (env == null) {
        env = this.base;
      }
      code = this.compiler.compile(code, env);
      return Task.userBlock(code, env);
    };

    Runtime.prototype["eval"] = function(stmt, env, cb) {
      var proc;
      if (arguments.length === 2) {
        cb = env;
        env = this.base;
      }
      try {
        proc = this.compile(stmt, env);
        return proc(cb);
      } catch (e) {
        return cb(e);
      }
    };

    return Runtime;

  })();

  module.exports = Runtime;

}).call(this);
