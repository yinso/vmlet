// Generated by CoffeeScript 1.4.0
(function() {
  var TailCall,
    __slice = [].slice;

  TailCall = (function() {

    TailCall.make = function(func, args) {
      return new TailCall(func, args);
    };

    function TailCall(inner, args) {
      this.inner = inner;
      this.args = args;
    }

    return TailCall;

  })();

  Function.prototype.tail = function() {
    return TailCall.make(this, arguments);
  };

  Function.prototype.tco = function() {
    var args, cb, tail, _i;
    args = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), cb = arguments[_i++];
    tail = TailCall.make(this, arguments);
    while (cb !== tail.inner) {
      tail = tail.inner.apply(this, tail.args);
    }
    return cb.apply(this, tail.args);
  };

}).call(this);
